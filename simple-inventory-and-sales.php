<?php
/**
 * The plugin bootstrap file
 *
 * This file is read by WordPress to generate the plugin information in the plugin
 * admin area. This file also includes all of the dependencies used by the plugin,
 * registers the activation and deactivation functions, and defines a function
 * that starts the plugin.
 *
 * @link              https://devine-itconsulting.com
 * @since             1.0.0
 * @package           Simple Inventory and Sales
 *
 * @wordpress-plugin
 *	Plugin Name:  Simple Inventory and Sales
 *	Description: This is a plugin designed to allow the tracking of inventory sold via PayPal
 *	Author:  Steve Devine
 * 	Version:           1.0.4
 *	Author URI:        https://devine-itconsulting.com, https://devinecreations.com
 * License:           GPL-2.0+
 * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt
 * Text Domain:       plugin-name
 * Domain Path:       /languages
 */


include( plugin_dir_path( __FILE__ ) . 'install_tables.php');
include( plugin_dir_path( __FILE__ ) . 'main.php');

register_deactivation_hook( __FILE__, 'simple_plugin_deactivation' );
function simple_plugin_deactivation() {

	echo "GoodBye";
	// Deactivation rules here
}

register_activation_hook( __FILE__, 'look_4_tables' );

// Create a page on activation to hold Product Add
define( 'INVENTORY_PLUGIN_FILE', __FILE__ );

register_activation_hook( INVENTORY_PLUGIN_FILE, 'inventory_plugin_activation' );


class Simple_Inventory_Sales_Plugin {
	// Our code will go here
	public function __construct() {
		// Hook into the admin menu
		add_action( 'admin_menu', array( $this, 'create_plugin_settings_page' ) );
		include_once( plugin_dir_path( __FILE__ ) . 'vendor/advanced-custom-fields/acf.php' );
		add_filter( 'acf/settings/path', array( $this, 'update_acf_settings_path' ) );
		add_filter( 'acf/settings/dir', array( $this, 'update_acf_settings_dir' ) );
		$this->setup_options();
		add_action( 'admin_init', array( $this, 'add_acf_variables' ) );
		add_filter( 'acf/settings/show_admin', '__return_false' ); //Uncomment to hide ACF plugin

	}

	public function update_acf_settings_path( $path ) {
		$path = plugin_dir_path( __FILE__ ) . 'vendor/advanced-custom-fields/';
		return $path;
	}

	public function update_acf_settings_dir( $dir ) {
		$dir = plugin_dir_url( __FILE__ ) . 'vendor/advanced-custom-fields/';
		return $dir;
	}

	public function create_plugin_settings_page() {
		// Add the menu item and page
		$page_title = 'Simple Inventory and Sales Settings Page';
		$menu_title = 'Simple Inventory and Sales Plugin';
		$capability = 'manage_options';
		$slug = 'simple_inv';
		$callback = array( $this, 'plugin_settings_page_content' );
		$icon = 'dashicons-admin-plugins';
		$position = 100;

		add_menu_page( $page_title, $menu_title, $capability, $slug, $callback, $icon, $position );
	}
	public function setup_options() {
		/// This code is generated by Custom Fields - you must update the key also in "plugin_settings_page_content()" section below

		if( function_exists('acf_add_local_field_group') ):

			acf_add_local_field_group(array(
						'key' => 'group_5f45a218cf4b0',
						'title' => 'Settings',
						'fields' => array(
							array(
								'key' => 'field_5f45a22430ded',
								'label' => 'Admin EMail Account',
								'name' => 'admin_email_account',
								'type' => 'email',
								'instructions' => '',
								'required' => 1,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
									),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
							     ),
							array(
								'key' => 'field_5f483fe1fc979',
								'label' => 'Simple Inventory and Sales Admin User',
								'name' => 'Simple_admin_user',
								'type' => 'text',
								'instructions' => 'This is the local user that is allowed to add and remove product etc.',
								'required' => 1,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
									),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							     ),
			array(
					'key' => 'field_5f500869b13ad',
					'label' => 'Application URL',
					'name' => 'application_url',
					'type' => 'url',
					'instructions' => 'This is the link to your website like (https://sample.com)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
						),
					'default_value' => '',
					'placeholder' => '',
			     ),
			),
			'location' => array(
					array(
						array(
							'param' => 'post_type',
							'operator' => '==',
							'value' => 'post',
						     ),
					     ),
					),
			'menu_order' => 0,
			'position' => 'normal',
			'style' => 'default',
			'label_placement' => 'top',
			'instruction_placement' => 'label',
			'hide_on_screen' => '',
			'active' => true,
			'description' => '',
			));

		endif;
	}

	public function plugin_settings_page_content() {
		do_action('acf/input/admin_head'); // Add ACF admin head hooks
		do_action('acf/input/admin_enqueue_scripts'); // Add ACF scripts
		$options = array(
				'id' => 'acf-form',
				'post_id' => 'options',
				'new_post' => false,
				'field_groups' => array('key' => 'group_5f45a218cf4b0'),
				'return' => admin_url('admin.php?page=simple_inv'),
				'submit_value' => 'Update',
				);
		acf_form( $options );
	}

	public function add_acf_variables() {
		acf_form_head();
	}
}

new Simple_Inventory_Sales_Plugin();



// Test for customer table
function look_4_tables() {
	require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
	global $wpdb;
	global $simple_db_version;

	$prod_table_name = $wpdb->prefix . 'simple_product';
	if($wpdb->get_var("SHOW TABLES LIKE '$prod_table_name'") != $prod_table_name) {
		simple_install($prod_table_name);
	}
	$sales_table_name = $wpdb->prefix . 'simple_sales';
	if($wpdb->get_var("SHOW TABLES LIKE '$sales_table_name'") != $sales_table_name) {
		simple_install($sales_table_name);
	}
	/*        $owner_profile_table_name = $wpdb->prefix . 'simple_owner_profile';
		  if($wpdb->get_var("SHOW TABLES LIKE '$owner_profile_table_name'") != $owner_profile_table_name) {
		  simple_install($owner_profile_table_name);
		  }
		  $table_name = 'wp_simple_customer';
		  if($wpdb->get_var("SHOW TABLES LIKE '$table_name'") != $table_name) {
		  simple_install($table_name);
		  }

	 */
}



function inventory_plugin_activation() {

	if ( ! current_user_can( 'activate_plugins' ) ) return;

	global $wpdb;
	
	//Admin
	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'admin'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$get_url = get_field('application_url', 'option');
		$content= '[Simple_Check] <div class="wp-block-button"><a class="wp-block-button__link" href="$get_url/index.php/admin-product-search/">Go to Admin Product Search - Manage</a></div><p><div class="wp-block-button"><a class="wp-block-button__link" href="$get_url/index.php/product-manage/">Go to Product Add</a></div><p><div class="wp-block-button"><a class="wp-block-button__link" href="$get_url/index.php/export/">Go to Sales Export</a></div>';
		$admin_page = array(
				'post_title'  => __( 'Admin' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => $content, 
	//			'menu_order' => '2',
				);

		// insert the post into the database
		wp_insert_post( $admin_page );
	}

	// Admin Product Search  
	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'admin-product-search'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$page = array(
				'post_title'  => __( 'Admin Product Search' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[Simple_Check][StandardAdminSearch]',
			     );

		// insert the post into the database
		wp_insert_post( $page );
	}


	//Export
	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'export'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$export_page = array(
				'post_title'  => __( 'Export' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[Simple_Check][SimpleExport]',
				);

		// insert the post into the database
		wp_insert_post( $export_page );
	}

	//Product Manage

	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'product-manage'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$prod_manage_page = array(
				'post_title'  => __( 'Product Manage' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[Simple_Check][SimpleProd]',
				);

		// insert the post into the database
		wp_insert_post( $prod_manage_page );
	} 

	//Product Search

	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'product-search'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$prod_search_page = array(
				'post_title'  => __( 'Product Search' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[Simple_Check_Reverse][StandardSearch]',
				);

		// insert the post into the database
		wp_insert_post( $prod_search_page );
	}

	//Response
	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'response'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$response_page = array(
				'post_title'  => __( 'Response' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[SimpleResponse]',
				);

		// insert the post into the database
		wp_insert_post( $response_page );
	}

	//Featured
	if ( null === $wpdb->get_row( "SELECT post_name FROM {$wpdb->prefix}posts WHERE post_name = 'featured'", 'ARRAY_A' ) ) {
		$current_user = wp_get_current_user();
		$featured_page = array(
				'post_title'  => __( 'Featured' ),
				'post_status' => 'publish',
				'post_author' => $current_user->ID,
				'post_type'   => 'page',
				'post_content'   => '[ShowProdStripped id="1" ,  i_width="33%" , i_height="33%" i_border="4px solid black"]',
				);

		// insert the post into the database
		wp_insert_post( $featured_page );
	}


	// Menu Management
	// Check if the menu exists


	// Initialize name and location

	$menu_name     = 'Simple Inventory and Sales Admin Menu';
	$menu_location = 'footer-menu';

	$menu_exists = wp_get_nav_menu_object( $menu_name );

	// If it doesn't exist, let's create it.
	if ( ! $menu_exists ) {
		$menu_id = wp_create_nav_menu( $menu_name );

		// Set up default menu items
		wp_update_nav_menu_item( $menu_id, 0, array(
					'menu-item-title'   =>  __( 'Home', 'textdomain' ),
					'menu-item-classes' => 'home',
					'menu-item-url'     => home_url( '/' ),
					'menu-item-status'  => 'publish',
					) );

		wp_update_nav_menu_item( $menu_id, 0, array(
					'menu-item-title'  =>  __( 'Admin', 'textdomain' ),
					'menu-item-url'    => home_url( '/index.php/admin/' ),
					'menu-item-status' => 'publish',
					) );
	} else {
		$nav_menu = get_term_by( 'slug', $menu_location, 'nav_menu' );
		$menu_id  = $nav_menu->term_id;
	}

	if ( ! has_nav_menu( $menu_location ) ) {
		$locations = get_theme_mod( 'nav_menu_locations' );
		$locations[ $menu_location ] = $menu_id; // no PHP notice here now
		set_theme_mod( 'nav_menu_locations', $locations );
	}

$public_menu_name     = 'Simple Inventory and Sales Public Menu';
        $public_menu_location = 'top';

        $public_menu_exists = wp_get_nav_menu_object( $public_menu_name );

        // If it doesn't exist, let's create it.
        if ( ! $public_menu_exists ) {
                $public_menu_id = wp_create_nav_menu( $public_menu_name );

                // Set up default menu items
                wp_update_nav_menu_item( $public_menu_id, 0, array(
                                        'menu-item-title'   =>  __( 'Product Search', 'textdomain' ),
                                        'menu-item-classes' => 'search',
                                        'menu-item-url'     => home_url( '/index.php/product-search/' ),
                                        'menu-item-status'  => 'publish',
                                        ) );

                wp_update_nav_menu_item( $public_menu_id, 0, array(
                                        'menu-item-title'  =>  __( 'Featured', 'textdomain' ),
                                        'menu-item-url'    => home_url( '/index.php/featured/' ),
                                        'menu-item-status' => 'publish',
                                        ) );
        }
/* else {
	
                $public_nav_menu = get_term_by( 'slug', $public_menu_location, 'nav_menu' );
                $public_menu_id  = $public_nav_menu->term_id;
        }

        if ( ! has_nav_menu( $public_menu_location ) ) {
                $public_locations = get_theme_mod( 'nav_menu_locations' );
                $public_locations[ $public_menu_location ] = $public_menu_id; // no PHP notice here now
                set_theme_mod( 'nav_menu_locations', $public_locations );
        }
*/
} //END


